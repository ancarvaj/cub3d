!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ancarvaj/cub3d_pub/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(NAME)	mlx/Makefile.mk	/^$(NAME)	: $(OBJ)$/;"	t
$(NAME)	mlx/test/Makefile.mk	/^$(NAME): $(OBJ)$/;"	t
$(OBJ_DIR)/%.o	mlx/Makefile.mk	/^$(OBJ_DIR)\/%.o: %.c$/;"	t
AUTHOR	mlx/man/man1/mlx.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man1/mlx_loop.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man1/mlx_new_image.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man1/mlx_new_window.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man1/mlx_pixel_put.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx_loop.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx_new_image.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx_new_window.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx_pixel_put.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
BUFFER_SIZE	libft/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
C	includes/cub3d.h	/^	C = 32$/;"	e	enum:e_identifier
CC	mlx/Makefile.mk	/^	CC = clang$/;"	m
CC	mlx/Makefile.mk	/^CC	= gcc$/;"	m
CC	mlx/test/Makefile.mk	/^	CC	= gcc$/;"	m
CC	mlx/test/Makefile.mk	/^	CC = clang$/;"	m
CFLAGS	mlx/Makefile.mk	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CFLAGS	mlx/test/Makefile.mk	/^CFLAGS= -I$(INC) -O3 -I.. -g$/;"	m
COLOR	mlx/man/man1/mlx_pixel_put.1	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
COLOR	mlx/man/man3/mlx_pixel_put.3	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
COLOR_NUM	includes/cub3d.h	/^# define COLOR_NUM /;"	d
CORRECT_IDENTIFIER	includes/cub3d.h	/^# define CORRECT_IDENTIFIER /;"	d
CUB3D_H	includes/cub3d.h	/^# define CUB3D_H$/;"	d
DESCRIPTION	mlx/man/man1/mlx.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man1/mlx_loop.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man1/mlx_new_image.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man1/mlx_new_window.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man1/mlx_pixel_put.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx_loop.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx_new_image.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx_new_window.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx_pixel_put.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DOWN	includes/cub3d.h	/^# define DOWN /;"	d
EA	includes/cub3d.h	/^	EA = 8,$/;"	e	enum:e_identifier
EAST	includes/cub3d.h	/^# define EAST /;"	d
ENV_DISPLAY	mlx/mlx_int.h	/^# define ENV_DISPLAY /;"	d
EOF	mlx/configure	/^cat <<EOF$/;"	h
ERR	includes/cub3d.h	/^	ERR = -1,$/;"	e	enum:e_identifier
ERR_NO_TRUECOLOR	mlx/mlx_int.h	/^# define ERR_NO_TRUECOLOR /;"	d
F	includes/cub3d.h	/^	F = 16,$/;"	e	enum:e_identifier
FLOOR	includes/cub3d.h	/^# define FLOOR /;"	d
GET_NEXT_LINE_H	libft/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GOING	mlx/man/man1/mlx_loop.1	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
GOING	mlx/man/man3/mlx_loop.3	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
IM1_SX	mlx/test/main.c	/^#define	IM1_SX	/;"	d	file:
IM1_SY	mlx/test/main.c	/^#define	IM1_SY	/;"	d	file:
IM3_SX	mlx/test/main.c	/^#define	IM3_SX	/;"	d	file:
IM3_SY	mlx/test/main.c	/^#define	IM3_SY	/;"	d	file:
INC	mlx/Makefile.mk	/^INC	=%%%%$/;"	m
INC	mlx/test/Makefile.mk	/^INC=%%%%$/;"	m
INCLIB	mlx/test/Makefile.mk	/^INCLIB=$(INC)\/..\/lib$/;"	m
INCLUDE	mlx/man/man1/mlx.1	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INCLUDE	mlx/man/man3/mlx.3	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
LEFT	includes/cub3d.h	/^# define LEFT /;"	d
LFLAGS	mlx/test/Makefile.mk	/^LFLAGS = -L.. -lmlx -L$(INCLIB) -lXext -lX11 -lm$/;"	m
LIBFT_H	libft/libft.h	/^# define LIBFT_H$/;"	d
LIBRARY	mlx/man/man1/mlx.1	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LIBRARY	mlx/man/man3/mlx.3	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LINKING	mlx/man/man1/mlx.1	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LINKING	mlx/man/man3/mlx.3	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LOCALHOST	mlx/mlx_int.h	/^# define LOCALHOST /;"	d
MAP_CHAR	includes/cub3d.h	/^	MAP_CHAR = -2,$/;"	e	enum:e_identifier
MLX_H	mlx/mlx.h	/^#define	MLX_H$/;"	d
MLX_INT_H	mlx/mlx_int.h	/^# define MLX_INT_H$/;"	d
MLX_MAX_EVENT	mlx/mlx_int.h	/^# define MLX_MAX_EVENT /;"	d
MLX_TYPE_SHM	mlx/mlx_int.h	/^# define MLX_TYPE_SHM /;"	d
MLX_TYPE_SHM_PIXMAP	mlx/mlx_int.h	/^# define MLX_TYPE_SHM_PIXMAP /;"	d
MLX_TYPE_XIMAGE	mlx/mlx_int.h	/^# define MLX_TYPE_XIMAGE /;"	d
MiniLibX	mlx/man/man1/mlx.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man1/mlx_loop.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man1/mlx_new_image.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man1/mlx_new_window.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man1/mlx_pixel_put.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx_loop.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx_new_image.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx_new_window.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx_pixel_put.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
NAME	mlx/Makefile.mk	/^NAME		= libmlx.a$/;"	m
NAME	mlx/man/man1/mlx.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man1/mlx_loop.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man1/mlx_new_image.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man1/mlx_new_window.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man1/mlx_pixel_put.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx_loop.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx_new_image.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx_new_window.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx_pixel_put.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/test/Makefile.mk	/^NAME= mlx-test$/;"	m
NAME_UNAME	mlx/Makefile.mk	/^NAME_UNAME	= libmlx_$(UNAME).a$/;"	m
NO	includes/cub3d.h	/^	NO = 1,$/;"	e	enum:e_identifier
NORTH	includes/cub3d.h	/^# define NORTH /;"	d
OBJ	mlx/Makefile.mk	/^OBJ	= $(addprefix $(OBJ_DIR)\/,$(SRC:%.c=%.o))$/;"	m
OBJ	mlx/test/Makefile.mk	/^OBJ = $(SRC:%.c=%.o)$/;"	m
OBJ_DIR	mlx/Makefile.mk	/^OBJ_DIR = obj$/;"	m
RETURN	mlx/man/man1/mlx.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man1/mlx_new_image.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man1/mlx_new_window.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man3/mlx.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man3/mlx_new_image.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man3/mlx_new_window.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RIGHT	includes/cub3d.h	/^# define RIGHT /;"	d
SEE	mlx/man/man1/mlx.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man1/mlx_loop.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man1/mlx_new_image.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man1/mlx_new_window.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man1/mlx_pixel_put.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx_loop.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx_new_image.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx_new_window.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx_pixel_put.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SO	includes/cub3d.h	/^	SO = 2,$/;"	e	enum:e_identifier
SOUTH	includes/cub3d.h	/^# define SOUTH /;"	d
SRC	mlx/Makefile.mk	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	mlx/test/Makefile.mk	/^SRC = main.c$/;"	m
STORING	mlx/man/man1/mlx_new_image.1	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
STORING	mlx/man/man3/mlx_new_image.3	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
STRAFE_LEFT	includes/cub3d.h	/^# define STRAFE_LEFT /;"	d
STRAFE_RIGHT	includes/cub3d.h	/^# define STRAFE_RIGHT /;"	d
SYNOPSYS	mlx/man/man1/mlx.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man1/mlx_loop.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man1/mlx_new_image.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man1/mlx_new_window.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man1/mlx_pixel_put.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx_loop.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx_new_image.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx_new_window.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx_pixel_put.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
TEXTURE_HEIGHT	includes/cub3d.h	/^# define TEXTURE_HEIGHT /;"	d
TEXTURE_NUM	includes/cub3d.h	/^# define TEXTURE_NUM /;"	d
TEXTURE_WIDTH	includes/cub3d.h	/^# define TEXTURE_WIDTH /;"	d
TEX_EAST	includes/cub3d.h	/^# define TEX_EAST /;"	d
TEX_NORTH	includes/cub3d.h	/^# define TEX_NORTH /;"	d
TEX_SOUTH	includes/cub3d.h	/^# define TEX_SOUTH /;"	d
TEX_WEST	includes/cub3d.h	/^# define TEX_WEST /;"	d
UNAME	mlx/Makefile.mk	/^UNAME = $(shell uname)$/;"	m
UNAME	mlx/test/Makefile.mk	/^UNAME := $(shell uname)$/;"	m
UP	includes/cub3d.h	/^# define UP /;"	d
VOID	includes/cub3d.h	/^# define VOID /;"	d
WALL	includes/cub3d.h	/^# define WALL /;"	d
WARN_SHM_ATTACH	mlx/mlx_int.h	/^# define WARN_SHM_ATTACH /;"	d
WE	includes/cub3d.h	/^	WE = 4,$/;"	e	enum:e_identifier
WEST	includes/cub3d.h	/^# define WEST /;"	d
WIN1_SX	mlx/test/main.c	/^#define	WIN1_SX	/;"	d	file:
WIN1_SY	mlx/test/main.c	/^#define	WIN1_SY	/;"	d	file:
WINDOW_HEIGHT	includes/cub3d.h	/^# define WINDOW_HEIGHT /;"	d
WINDOW_WIDTH	includes/cub3d.h	/^# define WINDOW_WIDTH /;"	d
X-WINDOW	mlx/man/man1/mlx.1	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	mlx/man/man1/mlx_loop.1	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
X-WINDOW	mlx/man/man3/mlx.3	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	mlx/man/man3/mlx_loop.3	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
XPM	mlx/man/man1/mlx_new_image.1	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
XPM	mlx/man/man3/mlx_new_image.3	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
X_ShmAttach	mlx/mlx_new_image.c	/^#define	X_ShmAttach	/;"	d	file:
_img	includes/cub3d.h	/^	t_address	_img;$/;"	m	struct:s_mlx	typeref:typename:t_address
_texture	includes/cub3d.h	/^	t_iaddress	_texture[TEXTURE_NUM];$/;"	m	struct:s_textures	typeref:typename:t_iaddress[]
address	includes/cub3d.h	/^	char	*address;$/;"	m	struct:s_address	typeref:typename:char *
address	includes/cub3d.h	/^	int		*address;$/;"	m	struct:s_iaddress	typeref:typename:int *
all	mlx/Makefile.mk	/^all	: $(NAME)$/;"	t
all	mlx/test/Makefile.mk	/^all: $(NAME)$/;"	t
at_exit	mlx/test/run_tests.sh	/^at_exit() {$/;"	f
bpp	includes/cub3d.h	/^	int		bpp;$/;"	m	struct:s_address	typeref:typename:int
bpp	includes/cub3d.h	/^	int		bpp;$/;"	m	struct:s_iaddress	typeref:typename:int
bpp	mlx/mlx_int.h	/^	int				bpp;$/;"	m	struct:s_img	typeref:typename:int
bpp1	mlx/test/main.c	/^int	bpp1;$/;"	v	typeref:typename:int
bpp2	mlx/test/main.c	/^int	bpp2;$/;"	v	typeref:typename:int
bpp3	mlx/test/main.c	/^int	bpp3;$/;"	v	typeref:typename:int
bpp4	mlx/test/main.c	/^int	bpp4;$/;"	v	typeref:typename:int
calculate_perp_dis	src/raycast/wall_distance.c	/^double	calculate_perp_dis(t_raycast *ray, t_player *player, int side)$/;"	f	typeref:typename:double
calculate_ray_direction	src/raycast/raycast.c	/^void	calculate_ray_direction(t_raycast *ray, t_player *player, int x)$/;"	f	typeref:typename:void
calculate_texture_x	src/raycast/raycast.c	/^void	calculate_texture_x(t_raycast *ray, t_player *player,$/;"	f	typeref:typename:void
camera	includes/cub3d.h	/^	t_point	camera;$/;"	m	struct:s_player	typeref:typename:t_point
char_color	src/utils/color.c	/^int	char_color(char c)$/;"	f	typeref:typename:int
character	src/utils/map.c	/^void	character(int character, int *position)$/;"	f	typeref:typename:void
character_in_map	src/utils/check_character.c	/^int	character_in_map(char **map)$/;"	f	typeref:typename:int
check	mlx/Makefile.mk	/^check: all$/;"	t
check_character	src/utils/check_character.c	/^int	check_character(char c)$/;"	f	typeref:typename:int
check_collision	src/movement/player_movement.c	/^int	check_collision(t_cub3d *data, double new_x, double new_y)$/;"	f	typeref:typename:int
check_color	src/utils/color.c	/^int	check_color(char *color)$/;"	f	typeref:typename:int
check_empty_line	src/utils/check_map.c	/^int	check_empty_line(char **content)$/;"	f	typeref:typename:int
clean	mlx/Makefile.mk	/^clean	:$/;"	t
clean	mlx/configure	/^clean(){$/;"	f
clean	mlx/test/Makefile.mk	/^clean:$/;"	t
cmap	mlx/mlx_int.h	/^	Colormap	cmap;$/;"	m	struct:s_xvar	typeref:typename:Colormap
col	mlx/mlx_int.h	/^	int		col;$/;"	m	struct:s_xpm_col	typeref:typename:int
color	includes/cub3d.h	/^	int			color[COLOR_NUM];$/;"	m	struct:s_textures	typeref:typename:int[]
color	mlx/mlx_int.h	/^	int		color;$/;"	m	struct:s_col_name	typeref:typename:int
color_map_1	mlx/test/main.c	/^int	color_map_1(void *win,int w,int h)$/;"	f	typeref:typename:int
color_map_2	mlx/test/main.c	/^int	color_map_2(unsigned char *data,int bpp,int sl,int w,int h,int endian, int type)$/;"	f	typeref:typename:int
content	libft/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
convert_rgb_to_hex	src/utils/color.c	/^int	convert_rgb_to_hex(char *color)$/;"	f	typeref:typename:int
create_window	src/utils/start_game.c	/^void	create_window(t_mlx *mlx)$/;"	f	typeref:typename:void
cub3d_init	src/utils/init.c	/^void	cub3d_init(t_cub3d *cub3d, char **file_content)$/;"	f	typeref:typename:void
data	mlx/mlx_int.h	/^	char			*data;$/;"	m	struct:s_img	typeref:typename:char *
data1	mlx/test/main.c	/^char	*data1;$/;"	v	typeref:typename:char *
data2	mlx/test/main.c	/^char	*data2;$/;"	v	typeref:typename:char *
data3	mlx/test/main.c	/^char	*data3;$/;"	v	typeref:typename:char *
data4	mlx/test/main.c	/^char	*data4;$/;"	v	typeref:typename:char *
decrgb	mlx/mlx_int.h	/^	int			decrgb[6];$/;"	m	struct:s_xvar	typeref:typename:int[6]
delta_dist	includes/cub3d.h	/^	t_point		delta_dist;$/;"	m	struct:s_raycast	typeref:typename:t_point
depth	mlx/mlx_int.h	/^	int			depth;$/;"	m	struct:s_xvar	typeref:typename:int
determine_texture	src/raycast/raycast.c	/^int	determine_texture(t_raycast *ray, int side)$/;"	f	typeref:typename:int
dimension	includes/cub3d.h	/^	t_dimension	dimension;$/;"	m	struct:s_map	typeref:typename:t_dimension
direction	includes/cub3d.h	/^	t_point	direction;$/;"	m	struct:s_player	typeref:typename:t_point
display	mlx/mlx_int.h	/^	Display		*display;$/;"	m	struct:s_xvar	typeref:typename:Display *
do_flush	mlx/mlx_int.h	/^	int			do_flush;$/;"	m	struct:s_xvar	typeref:typename:int
draw_end	includes/cub3d.h	/^	int		draw_end;$/;"	m	struct:s_draw_params	typeref:typename:int
draw_start	includes/cub3d.h	/^	int		draw_start;$/;"	m	struct:s_draw_params	typeref:typename:int
draw_textured_column	src/raycast/rendering.c	/^void	draw_textured_column(t_cub3d *data, t_raycast *ray,$/;"	f	typeref:typename:void
e_identifier	includes/cub3d.h	/^enum e_identifier$/;"	g
end_loop	mlx/mlx_int.h	/^	int 		end_loop;$/;"	m	struct:s_xvar	typeref:typename:int
endian	includes/cub3d.h	/^	int		endian;$/;"	m	struct:s_address	typeref:typename:int
endian	includes/cub3d.h	/^	int		endian;$/;"	m	struct:s_iaddress	typeref:typename:int
endian1	mlx/test/main.c	/^int	endian1;$/;"	v	typeref:typename:int
endian2	mlx/test/main.c	/^int	endian2;$/;"	v	typeref:typename:int
endian3	mlx/test/main.c	/^int	endian3;$/;"	v	typeref:typename:int
endian4	mlx/test/main.c	/^int	endian4;$/;"	v	typeref:typename:int
expose_hook	mlx/mlx_int.h	/^	int					(*expose_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
expose_param	mlx/mlx_int.h	/^	void				*expose_param;$/;"	m	struct:s_win_list	typeref:typename:void *
expose_win1	mlx/test/main.c	/^int	expose_win1(void *p)$/;"	f	typeref:typename:int
expose_win2	mlx/test/main.c	/^int	expose_win2(void *p)$/;"	f	typeref:typename:int
floor_not_surround_by_wall	src/utils/wall.c	/^int	floor_not_surround_by_wall(char **map, int x, int y)$/;"	f	typeref:typename:int
format	mlx/mlx_int.h	/^	int				format;$/;"	m	struct:s_img	typeref:typename:int
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f	typeref:typename:int
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, unsigned int n)$/;"	f	typeref:typename:void
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f	typeref:typename:void *
ft_check_file_elements	src/utils/file_elements.c	/^int	ft_check_file_elements(char **file)$/;"	f	typeref:typename:int
ft_check_map	src/utils/check_map.c	/^int	ft_check_map(char **map)$/;"	f	typeref:typename:int
ft_check_map_char	src/utils/check_character.c	/^int	ft_check_map_char(char **map)$/;"	f	typeref:typename:int
ft_check_map_wall	src/utils/check_wall.c	/^int	ft_check_map_wall(char **map)$/;"	f	typeref:typename:int
ft_check_name	src/error/error.c	/^int	ft_check_name(char const *fmap)$/;"	f	typeref:typename:int
ft_close_window	src/utils/start_game.c	/^int	ft_close_window(t_mlx *mlx)$/;"	f	typeref:typename:int
ft_down_player	src/movement/player_movement.c	/^void	ft_down_player(t_cub3d *data, const double move_speed)$/;"	f	typeref:typename:void
ft_error	src/error/error.c	/^int	ft_error(char const *err)$/;"	f	typeref:typename:int
ft_free	libft/get_next_line_utils.c	/^char	*ft_free(char **s1)$/;"	f	typeref:typename:char *
ft_free_double	src/utils/libft_utils.c	/^void	ft_free_double(char **s)$/;"	f	typeref:typename:void
ft_free_substr	libft/ft_split.c	/^static void	ft_free_substr(char **s, unsigned int len)$/;"	f	typeref:typename:void	file:
ft_get_buf	libft/get_next_line.c	/^static char	*ft_get_buf(char *s, int fd)$/;"	f	typeref:typename:char *	file:
ft_get_file_content	src/utils/libft_utils.c	/^char	**ft_get_file_content(char *file_name)$/;"	f	typeref:typename:char **
ft_get_identifier	src/utils/check_identifier.c	/^enum e_identifier	ft_get_identifier(const char *line)$/;"	f	typeref:enum:e_identifier
ft_get_line	libft/get_next_line.c	/^static char	*ft_get_line(char *s, int len)$/;"	f	typeref:typename:char *	file:
ft_get_res	libft/get_next_line.c	/^static char	*ft_get_res(char *s, int start)$/;"	f	typeref:typename:char *	file:
ft_identifier	src/utils/file_elements.c	/^enum e_identifier	ft_identifier(char *line)$/;"	f	typeref:enum:e_identifier
ft_is_map	src/utils/check_map.c	/^int	ft_is_map(char c)$/;"	f	typeref:typename:int
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_left_player	src/movement/player_rotate.c	/^void	ft_left_player(t_cub3d *data, const double rotSpeed)$/;"	f	typeref:typename:void
ft_lstadd_back	libft/ft_lstadd_back_bonus.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	libft/ft_lstadd_front_bonus.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	libft/ft_lstclear_bonus.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	libft/ft_lstdelone_bonus.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstiter	libft/ft_lstiter_bonus.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	libft/ft_lstlast_bonus.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	libft/ft_lstmap_bonus.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	libft/ft_lstnew_bonus.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	libft/ft_lstsize_bonus.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, unsigned int n)$/;"	f	typeref:typename:void *
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, unsigned int n)$/;"	f	typeref:typename:int
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, unsigned int n)$/;"	f	typeref:typename:void *
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, unsigned int len)$/;"	f	typeref:typename:void *
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, unsigned int len)$/;"	f	typeref:typename:void *
ft_nb	libft/get_next_line.c	/^static int	ft_nb(char *s)$/;"	f	typeref:typename:int	file:
ft_nbr_div	libft/ft_itoa.c	/^static unsigned int	ft_nbr_div(unsigned int n)$/;"	f	typeref:typename:unsigned int	file:
ft_nbr_div	libft/ft_putnbr_fd.c	/^static unsigned int	ft_nbr_div(unsigned int n)$/;"	f	typeref:typename:unsigned int	file:
ft_nbrlen	libft/ft_itoa.c	/^static unsigned int	ft_nbrlen(long int n)$/;"	f	typeref:typename:unsigned int	file:
ft_nbrlen	libft/ft_putnbr_fd.c	/^static unsigned int	ft_nbrlen(long int n)$/;"	f	typeref:typename:unsigned int	file:
ft_nbrstr_cpy	libft/ft_itoa.c	/^static void	ft_nbrstr_cpy(char *s, int len, long int n)$/;"	f	typeref:typename:void	file:
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_right_player	src/movement/player_rotate.c	/^void	ft_right_player(t_cub3d *data, const double rotSpeed)$/;"	f	typeref:typename:void
ft_split	libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strafe_left	src/movement/player_movement.c	/^void	ft_strafe_left(t_cub3d *data, const double move_speed)$/;"	f	typeref:typename:void
ft_strafe_right	src/movement/player_movement.c	/^void	ft_strafe_right(t_cub3d *data, const double move_speed)$/;"	f	typeref:typename:void
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strchr_gnl	libft/get_next_line_utils.c	/^int	ft_strchr_gnl(char *s, int c)$/;"	f	typeref:typename:int
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f	typeref:typename:char *
ft_strdup_len	src/utils/libft_utils.c	/^char	*ft_strdup_len(const char *s, int len)$/;"	f	typeref:typename:char *
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f	typeref:typename:void
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strjoin_double	src/utils/libft_utils.c	/^char	**ft_strjoin_double(char **s, char *_new)$/;"	f	typeref:typename:char **
ft_strjoin_gnl	libft/get_next_line_utils.c	/^char	*ft_strjoin_gnl(char *s1, char *s2)$/;"	f	typeref:typename:char *
ft_strlcat	libft/ft_strlcat.c	/^int	ft_strlcat(char *dst, const char *src, int dstsize)$/;"	f	typeref:typename:int
ft_strlcpy	libft/ft_strlcpy.c	/^unsigned int	ft_strlcpy(char *dst, const char *src, unsigned int dstsize)$/;"	f	typeref:typename:unsigned int
ft_strlen	libft/ft_strlen.c	/^int	ft_strlen(const char	*s)$/;"	f	typeref:typename:int
ft_strlen_double	src/utils/libft_utils.c	/^int	ft_strlen_double(char **s)$/;"	f	typeref:typename:int
ft_strlen_gnl	libft/get_next_line_utils.c	/^int	ft_strlen_gnl(char *s)$/;"	f	typeref:typename:int
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, unsigned int n)$/;"	f	typeref:typename:int
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, unsigned int len)$/;"	f	typeref:typename:char *
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, int start, int len)$/;"	f	typeref:typename:char *
ft_substr_dup_len	libft/ft_split.c	/^static unsigned int	ft_substr_dup_len(char const *s, char c)$/;"	f	typeref:typename:unsigned int	file:
ft_substr_len	libft/ft_split.c	/^static unsigned int	ft_substr_len(char const *s, char c)$/;"	f	typeref:typename:unsigned int	file:
ft_substr_nbr	libft/ft_split.c	/^static unsigned int	ft_substr_nbr(char const *s, char c)$/;"	f	typeref:typename:unsigned int	file:
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
ft_up_player	src/movement/player_movement.c	/^void	ft_up_player(t_cub3d *data, const double move_speed)$/;"	f	typeref:typename:void
game_start	src/utils/start_game.c	/^void	game_start(t_cub3d *cub3d)$/;"	f	typeref:typename:void
gc	mlx/mlx_int.h	/^	GC					gc;$/;"	m	struct:s_win_list	typeref:typename:GC
gc	mlx/mlx_int.h	/^	GC				gc;$/;"	m	struct:s_img	typeref:typename:GC
gere_mouse	mlx/test/new_win.c	/^int gere_mouse(int x,int y,int button,void*toto)$/;"	f	typeref:typename:int
get_color	src/utils/color.c	/^void	get_color(enum e_identifier id, int *color, char *path)$/;"	f	typeref:typename:void
get_map	src/utils/map.c	/^char	**get_map(char **file)$/;"	f	typeref:typename:char **
get_next_line	libft/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_path	src/utils/file_elements.c	/^char	*get_path(char *line, enum e_identifier *tmp)$/;"	f	typeref:typename:char *
get_player_direction	src/utils/player_vector.c	/^void	get_player_direction(t_player *player, int vector)$/;"	f	typeref:typename:void
get_textures	src/utils/textures.c	/^void	get_textures(char **content, t_textures *textures)$/;"	f	typeref:typename:void
get_xlib_include_path	mlx/configure	/^get_xlib_include_path(){$/;"	f
goto_pattern	src/utils/check_identifier.c	/^int	goto_pattern(char const *s, char *skip)$/;"	f	typeref:typename:int
height	includes/cub3d.h	/^	int	height;$/;"	m	struct:s_dimension	typeref:typename:int
height	mlx/mlx_int.h	/^	int				height;$/;"	m	struct:s_img	typeref:typename:int
hook	mlx/mlx_int.h	/^	int		(*hook)();$/;"	m	struct:s_event_list	typeref:typename:int (*)()
hooks	mlx/mlx_int.h	/^	t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list	typeref:typename:t_event_list[]
im1	mlx/test/main.c	/^void    *im1;$/;"	v	typeref:typename:void *
im2	mlx/test/main.c	/^void	*im2;$/;"	v	typeref:typename:void *
im3	mlx/test/main.c	/^void	*im3;$/;"	v	typeref:typename:void *
im4	mlx/test/main.c	/^void	*im4;$/;"	v	typeref:typename:void *
image	mlx/mlx_int.h	/^	XImage			*image;$/;"	m	struct:s_img	typeref:typename:XImage *
img	includes/cub3d.h	/^	void		*img;$/;"	m	struct:s_mlx	typeref:typename:void *
init_dda_params	src/raycast/dda.c	/^void	init_dda_params(t_raycast *ray, t_player *player)$/;"	f	typeref:typename:void
key_hook	mlx/mlx_int.h	/^	int					(*key_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
key_param	mlx/mlx_int.h	/^	void				*key_param;$/;"	m	struct:s_win_list	typeref:typename:void *
key_press	src/utils/mlx_utils.c	/^int	key_press(int key_code, t_cub3d *data)$/;"	f	typeref:typename:int
key_win1	mlx/test/main.c	/^int	key_win1(int key,void *p)$/;"	f	typeref:typename:int
key_win2	mlx/test/main.c	/^int	key_win2(int key,void *p)$/;"	f	typeref:typename:int
key_win3	mlx/test/main.c	/^int	key_win3(int key,void *p)$/;"	f	typeref:typename:int
line_height	includes/cub3d.h	/^	int		line_height;$/;"	m	struct:s_draw_params	typeref:typename:int
load_textures	src/utils/textures.c	/^void	load_textures(t_textures *textures, t_mlx *mlx)$/;"	f	typeref:typename:void
local_endian	mlx/test/main.c	/^int	local_endian;$/;"	v	typeref:typename:int
log_error	mlx/configure	/^log_error(){$/;"	f
log_error	mlx/test/run_tests.sh	/^log_error(){$/;"	f
log_info	mlx/configure	/^log_info(){$/;"	f
log_info	mlx/test/run_tests.sh	/^log_info(){$/;"	f
logging	mlx/configure	/^logging(){$/;"	f
logging	mlx/test/run_tests.sh	/^logging(){$/;"	f
loop_hook	mlx/mlx_int.h	/^	int			(*loop_hook)();$/;"	m	struct:s_xvar	typeref:typename:int (*)()
loop_param	mlx/mlx_int.h	/^	void		*loop_param;$/;"	m	struct:s_xvar	typeref:typename:void *
main	mlx/configure	/^main(){$/;"	f
main	mlx/test/main.c	/^int	main()$/;"	f	typeref:typename:int
main	mlx/test/new_win.c	/^int main()$/;"	f	typeref:typename:int
main	mlx/test/run_tests.sh	/^main(){$/;"	f
main	src/main.c	/^int	main(int argc, char *argv[])$/;"	f	typeref:typename:int
map	includes/cub3d.h	/^	int			**map;$/;"	m	struct:s_map	typeref:typename:int **
map	includes/cub3d.h	/^	t_map		map;$/;"	m	struct:s_cub3d	typeref:typename:t_map
map	includes/cub3d.h	/^	t_vector	map;$/;"	m	struct:s_raycast	typeref:typename:t_vector
map_init	src/utils/init.c	/^void	map_init(t_map *map, char **char_map)$/;"	f	typeref:typename:void
mask	mlx/mlx_int.h	/^	int		mask;$/;"	m	struct:s_event_list	typeref:typename:int
matomi	src/utils/map.c	/^int	**matomi(char **matrix, int *line)$/;"	f	typeref:typename:int **
max_line	src/utils/map.c	/^int	max_line(char **matrix)$/;"	f	typeref:typename:int
mlx	includes/cub3d.h	/^	t_mlx		mlx;$/;"	m	struct:s_cub3d	typeref:typename:t_mlx
mlx	includes/cub3d.h	/^	void		*mlx;$/;"	m	struct:s_mlx	typeref:typename:void *
mlx	mlx/test/main.c	/^void	*mlx;$/;"	v	typeref:typename:void *
mlx	mlx/test/new_win.c	/^void *mlx;$/;"	v	typeref:typename:void *
mlx_X_error	mlx/mlx_new_image.c	/^int	mlx_X_error;$/;"	v	typeref:typename:int
mlx_clear_window	mlx/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_col_name	mlx/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name[]
mlx_destroy_display	mlx/mlx_destroy_display.c	/^int	mlx_destroy_display(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_destroy_image	mlx/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f	typeref:typename:int
mlx_destroy_window	mlx/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_do_key_autorepeatoff	mlx/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_key_autorepeaton	mlx/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_sync	mlx/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_expose_hook	mlx/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_ext_fullscreen	mlx/mlx_ext_randr.c	/^int			mlx_ext_fullscreen(t_xvar *xvar, t_win_list *win, int fullscreen)$/;"	f	typeref:typename:int
mlx_flush_event	mlx/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_get_color_value	mlx/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_get_data_addr	mlx/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f	typeref:typename:char *
mlx_get_screen_size	mlx/mlx_screen_size.c	/^int		mlx_get_screen_size(void *mlx_ptr, int *sizex, int *sizey)$/;"	f	typeref:typename:int
mlx_hook	mlx/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f	typeref:typename:int
mlx_init	mlx/mlx_init.c	/^void	*mlx_init()$/;"	f	typeref:typename:void *
mlx_int_anti_resize_win	mlx/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f	typeref:typename:int
mlx_int_deal_shm	mlx/mlx_init.c	/^int		mlx_int_deal_shm(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_do_nothing	mlx/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f	typeref:typename:int
mlx_int_egal_img	mlx/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f	typeref:typename:int
mlx_int_file_get_rid_comment	mlx/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f	typeref:typename:int
mlx_int_get_col_name	mlx/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f	typeref:typename:int
mlx_int_get_good_color	mlx/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_int_get_line	mlx/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_get_text_rgb	mlx/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f	typeref:typename:int
mlx_int_get_visual	mlx/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_new_image	mlx/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f	typeref:typename:void *
mlx_int_new_xshm_image	mlx/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f	typeref:typename:void *
mlx_int_param_ButtonPress	mlx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_ButtonRelease	mlx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_Expose	mlx/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyPress	mlx/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyRelease	mlx/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_MotionNotify	mlx/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_event	mlx/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v	typeref:typename:int (* ([]))()
mlx_int_param_generic	mlx/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_undef	mlx/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f	typeref:typename:int
mlx_int_parse_xpm	mlx/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f	typeref:typename:void *
mlx_int_rgb_conversion	mlx/mlx_init.c	/^int		mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_set_win_event_mask	mlx/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_static_line	mlx/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_str_str	mlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_str_cote	mlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_to_wordtab	mlx/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f	typeref:typename:char **
mlx_int_wait_first_expose	mlx/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f	typeref:typename:int
mlx_int_xpm_f_image	mlx/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f	typeref:typename:void *
mlx_int_xpm_set_pixel	mlx/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f	typeref:typename:int
mlx_key_hook	mlx/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_loop	mlx/mlx_loop.c	/^int			mlx_loop(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_end	mlx/mlx_loop.c	/^int			mlx_loop_end(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_hook	mlx/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_get_pos	mlx/mlx_mouse.c	/^int		mlx_mouse_get_pos(t_xvar *xvar, t_win_list *win, \\$/;"	f	typeref:typename:int
mlx_mouse_hide	mlx/mlx_mouse.c	/^int		mlx_mouse_hide(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_mouse_hook	mlx/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_move	mlx/mlx_mouse.c	/^int		mlx_mouse_move(t_xvar *xvar, t_win_list *win, int x, int y)$/;"	f	typeref:typename:int
mlx_mouse_show	mlx/mlx_mouse.c	/^int		mlx_mouse_show(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_new_image	mlx/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_image2	mlx/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_window	mlx/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f	typeref:typename:void *
mlx_pixel_put	mlx/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_put_image_to_window	mlx/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f	typeref:typename:int
mlx_set_font	mlx/mlx_set_font.c	/^void	mlx_set_font(t_xvar *xvar, t_win_list *win, char *name)$/;"	f	typeref:typename:void
mlx_string_put	mlx/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_xpm_file_to_image	mlx/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f	typeref:typename:void *
mlx_xpm_file_to_image	mlx/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	mlx/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	mlx/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f	typeref:typename:void *
mouse_hook	mlx/mlx_int.h	/^	int					(*mouse_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
mouse_param	mlx/mlx_int.h	/^	void				*mouse_param;$/;"	m	struct:s_win_list	typeref:typename:void *
mouse_win1	mlx/test/main.c	/^int	mouse_win1(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win2	mlx/test/main.c	/^int	mouse_win2(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win3	mlx/test/main.c	/^int	mouse_win3(int x,int y, void *p)$/;"	f	typeref:typename:int
my_mlx_init	src/utils/init.c	/^void	my_mlx_init(t_mlx *mlx)$/;"	f	typeref:typename:void
my_mlx_pixel_put	src/utils/mlx_print.c	/^void	my_mlx_pixel_put(t_mlx *mlx, int x, int y, int color)$/;"	f	typeref:typename:void
name	mlx/mlx_int.h	/^	char	*name;$/;"	m	struct:s_col_name	typeref:typename:char *
name	mlx/mlx_int.h	/^	int		name;$/;"	m	struct:s_xpm_col	typeref:typename:int
next	libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
next	mlx/mlx_int.h	/^	struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list *
not_surronded_down	src/utils/wall.c	/^int	not_surronded_down(char **map, int x, int y, char search)$/;"	f	typeref:typename:int
not_surronded_left	src/utils/wall.c	/^int	not_surronded_left(char **map, int x, int y, char search)$/;"	f	typeref:typename:int
not_surronded_right	src/utils/wall.c	/^int	not_surronded_right(char **map, int x, int y, char search)$/;"	f	typeref:typename:int
not_surronded_up	src/utils/wall.c	/^int	not_surronded_up(char **map, int x, int y, char search)$/;"	f	typeref:typename:int
param	mlx/mlx_int.h	/^	void	*param;$/;"	m	struct:s_event_list	typeref:typename:void *
parse_args	mlx/configure	/^parse_args(){$/;"	f
parse_color	src/utils/color.c	/^int	parse_color(enum e_identifier id, int *color, char *path)$/;"	f	typeref:typename:int
parse_texture	src/utils/textures.c	/^int	parse_texture(enum e_identifier id, char **files, char *texture)$/;"	f	typeref:typename:int
perform_dda	src/raycast/dda.c	/^void	perform_dda(t_raycast *ray, t_map *map, int *side)$/;"	f	typeref:typename:void
perp_wall_dist	includes/cub3d.h	/^	double		perp_wall_dist;$/;"	m	struct:s_raycast	typeref:typename:double
pix	mlx/mlx_int.h	/^	Pixmap			pix;$/;"	m	struct:s_img	typeref:typename:Pixmap
player	includes/cub3d.h	/^	t_player	player;$/;"	m	struct:s_cub3d	typeref:typename:t_player
player_init	src/utils/init.c	/^void	player_init(t_player *player, t_map *map)$/;"	f	typeref:typename:void
position	includes/cub3d.h	/^	t_point	position;$/;"	m	struct:s_player	typeref:typename:t_point
print_floor_ceiling	src/utils/mlx_print.c	/^void	print_floor_ceiling(t_cub3d *data, int color_floor, int color_ceiling)$/;"	f	typeref:typename:void
private_cmap	mlx/mlx_int.h	/^	int			private_cmap;$/;"	m	struct:s_xvar	typeref:typename:int
pshm_format	mlx/mlx_int.h	/^	int			pshm_format;$/;"	m	struct:s_xvar	typeref:typename:int
ray_dir	includes/cub3d.h	/^	t_point		ray_dir;$/;"	m	struct:s_raycast	typeref:typename:t_point
re	mlx/test/Makefile.mk	/^re: clean all$/;"	t
render_frame	src/raycast/raycast.c	/^void	render_frame(t_cub3d *data)$/;"	f	typeref:typename:void
root	mlx/mlx_int.h	/^	Window		root;$/;"	m	struct:s_xvar	typeref:typename:Window
s_address	includes/cub3d.h	/^typedef struct s_address$/;"	s
s_col_name	mlx/mlx_int.h	/^struct	s_col_name$/;"	s
s_cub3d	includes/cub3d.h	/^typedef struct s_cub3d$/;"	s
s_dimension	includes/cub3d.h	/^typedef struct s_dimension$/;"	s
s_draw_params	includes/cub3d.h	/^typedef struct s_draw_params$/;"	s
s_event_list	mlx/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_iaddress	includes/cub3d.h	/^typedef struct s_iaddress$/;"	s
s_img	mlx/mlx_int.h	/^typedef struct	s_img$/;"	s
s_list	libft/libft.h	/^typedef struct s_list$/;"	s
s_map	includes/cub3d.h	/^typedef struct s_map$/;"	s
s_mlx	includes/cub3d.h	/^typedef struct s_mlx$/;"	s
s_player	includes/cub3d.h	/^typedef struct s_player$/;"	s
s_point	includes/cub3d.h	/^typedef struct s_point$/;"	s
s_raycast	includes/cub3d.h	/^typedef struct s_raycast$/;"	s
s_textures	includes/cub3d.h	/^typedef struct s_textures$/;"	s
s_vector	includes/cub3d.h	/^typedef struct s_vector$/;"	s
s_win_list	mlx/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_xpm_col	mlx/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xvar	mlx/mlx_int.h	/^typedef struct	s_xvar$/;"	s
safe_divide	src/raycast/raycast.c	/^double	safe_divide(double numerator, double denominator)$/;"	f	typeref:typename:double
saved_mode	mlx/mlx_ext_randr.c	/^RRMode	saved_mode = 0;$/;"	v	typeref:typename:RRMode
screen	mlx/mlx_int.h	/^	int			screen;$/;"	m	struct:s_xvar	typeref:typename:int
set_player_camera	src/utils/player_vector.c	/^void	set_player_camera(double x, double y, t_point *camera)$/;"	f	typeref:typename:void
set_player_dir	src/utils/player_vector.c	/^void	set_player_dir(double x, double y, t_point *direction)$/;"	f	typeref:typename:void
set_step_and_side	src/raycast/dda.c	/^void	set_step_and_side(t_raycast *ray, t_player *player)$/;"	f	typeref:typename:void
set_texture	src/utils/check_identifier.c	/^int	set_texture(char **files, char *path, enum e_identifier id)$/;"	f	typeref:typename:int
shm	mlx/mlx_int.h	/^	XShmSegmentInfo	shm;$/;"	m	struct:s_img	typeref:typename:XShmSegmentInfo
shm_att_pb	mlx/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f	typeref:typename:int
show	mlx/Makefile.mk	/^show:$/;"	t
show	mlx/test/Makefile.mk	/^show:$/;"	t
show_help	mlx/configure	/^show_help(){$/;"	f
side_dist	includes/cub3d.h	/^	t_point		side_dist;$/;"	m	struct:s_raycast	typeref:typename:t_point
side_hit	includes/cub3d.h	/^	int			side_hit;$/;"	m	struct:s_raycast	typeref:typename:int
sigint_handler	mlx/test/run_tests.sh	/^sigint_handler(){$/;"	f
size_line	includes/cub3d.h	/^	int		size_line;$/;"	m	struct:s_address	typeref:typename:int
size_line	includes/cub3d.h	/^	int		size_line;$/;"	m	struct:s_iaddress	typeref:typename:int
size_line	mlx/mlx_int.h	/^	int				size_line;$/;"	m	struct:s_img	typeref:typename:int
skip_pattern	src/utils/check_identifier.c	/^char	*skip_pattern(char *s, char const *follow)$/;"	f	typeref:typename:char *
sl1	mlx/test/main.c	/^int	sl1;$/;"	v	typeref:typename:int
sl2	mlx/test/main.c	/^int	sl2;$/;"	v	typeref:typename:int
sl3	mlx/test/main.c	/^int	sl3;$/;"	v	typeref:typename:int
sl4	mlx/test/main.c	/^int	sl4;$/;"	v	typeref:typename:int
step	includes/cub3d.h	/^	t_point		step;$/;"	m	struct:s_raycast	typeref:typename:t_point
strlcpy_is_not_posix	mlx/mlx_xpm.c	/^unsigned int	strlcpy_is_not_posix(char *dest, char *src, unsigned int size)$/;"	f	typeref:typename:unsigned int
t_address	includes/cub3d.h	/^}	t_address;$/;"	t	typeref:struct:s_address
t_cub3d	includes/cub3d.h	/^}	t_cub3d;$/;"	t	typeref:struct:s_cub3d
t_dimension	includes/cub3d.h	/^}	t_dimension;$/;"	t	typeref:struct:s_dimension
t_draw_params	includes/cub3d.h	/^}	t_draw_params;$/;"	t	typeref:struct:s_draw_params
t_event_list	mlx/mlx_int.h	/^}				t_event_list;$/;"	t	typeref:struct:s_event_list
t_iaddress	includes/cub3d.h	/^}	t_iaddress;$/;"	t	typeref:struct:s_iaddress
t_img	mlx/mlx_int.h	/^}				t_img;$/;"	t	typeref:struct:s_img
t_list	libft/libft.h	/^}				t_list;$/;"	t	typeref:struct:s_list
t_map	includes/cub3d.h	/^}	t_map;$/;"	t	typeref:struct:s_map
t_mlx	includes/cub3d.h	/^}	t_mlx;$/;"	t	typeref:struct:s_mlx
t_player	includes/cub3d.h	/^}	t_player;$/;"	t	typeref:struct:s_player
t_point	includes/cub3d.h	/^}	t_point;$/;"	t	typeref:struct:s_point
t_raycast	includes/cub3d.h	/^}	t_raycast;$/;"	t	typeref:struct:s_raycast
t_textures	includes/cub3d.h	/^}	t_textures;$/;"	t	typeref:struct:s_textures
t_vector	includes/cub3d.h	/^}	t_vector;$/;"	t	typeref:struct:s_vector
t_win_list	mlx/mlx_int.h	/^}				t_win_list;$/;"	t	typeref:struct:s_win_list
t_xpm_col	mlx/mlx_int.h	/^}				t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xvar	mlx/mlx_int.h	/^}				t_xvar;$/;"	t	typeref:struct:s_xvar
test_default_main	mlx/test/run_tests.sh	/^test_default_main(){$/;"	f
tex_num	includes/cub3d.h	/^	int		tex_num;$/;"	m	struct:s_draw_params	typeref:typename:int
texture	includes/cub3d.h	/^	t_vector	texture;$/;"	m	struct:s_raycast	typeref:typename:t_vector
texture	includes/cub3d.h	/^	void		*texture[TEXTURE_NUM];$/;"	m	struct:s_textures	typeref:typename:void * []
texture_path	includes/cub3d.h	/^	char		*texture_path[TEXTURE_NUM];$/;"	m	struct:s_textures	typeref:typename:char * []
textures	includes/cub3d.h	/^	t_textures	textures;$/;"	m	struct:s_cub3d	typeref:typename:t_textures
textures_init	src/utils/init.c	/^void	textures_init(t_textures *textures, char **file_content)$/;"	f	typeref:typename:void
type	mlx/mlx_int.h	/^	int				type;$/;"	m	struct:s_img	typeref:typename:int
update_position	src/utils/mlx_utils.c	/^void	update_position(t_cub3d *data, int vector)$/;"	f	typeref:typename:void
use_xshm	mlx/mlx_int.h	/^	int			use_xshm;$/;"	m	struct:s_xvar	typeref:typename:int
visual	mlx/mlx_int.h	/^	Visual		*visual;$/;"	m	struct:s_xvar	typeref:typename:Visual *
void_not_surronded_down	src/utils/void.c	/^int	void_not_surronded_down(char **map, int x, int y)$/;"	f	typeref:typename:int
void_not_surronded_left	src/utils/void.c	/^int	void_not_surronded_left(char **map, int x, int y)$/;"	f	typeref:typename:int
void_not_surronded_right	src/utils/void.c	/^int	void_not_surronded_right(char **map, int x, int y)$/;"	f	typeref:typename:int
void_not_surronded_up	src/utils/void.c	/^int	void_not_surronded_up(char **map, int x, int y)$/;"	f	typeref:typename:int
void_surronded_by_floor	src/utils/void.c	/^int	void_surronded_by_floor(char **map, int x, int y)$/;"	f	typeref:typename:int
wall_distance	includes/cub3d.h	/^	double	wall_distance;$/;"	m	struct:s_draw_params	typeref:typename:double
wall_tex	includes/cub3d.h	/^	t_point		wall_tex;$/;"	m	struct:s_raycast	typeref:typename:t_point
width	includes/cub3d.h	/^	int	width;$/;"	m	struct:s_dimension	typeref:typename:int
width	mlx/mlx_int.h	/^	int				width;$/;"	m	struct:s_img	typeref:typename:int
win	includes/cub3d.h	/^	void		*win;$/;"	m	struct:s_mlx	typeref:typename:void *
win1	mlx/test/main.c	/^void	*win1;$/;"	v	typeref:typename:void *
win1	mlx/test/new_win.c	/^void *win1;$/;"	v	typeref:typename:void *
win2	mlx/test/main.c	/^void    *win2;$/;"	v	typeref:typename:void *
win2	mlx/test/new_win.c	/^void *win2;$/;"	v	typeref:typename:void *
win3	mlx/test/main.c	/^void    *win3;$/;"	v	typeref:typename:void *
win_count	mlx/mlx_loop.c	/^static int	win_count(t_xvar *xvar)$/;"	f	typeref:typename:int	file:
win_list	mlx/mlx_int.h	/^	t_win_list	*win_list;$/;"	m	struct:s_xvar	typeref:typename:t_win_list *
window	mlx/mlx_int.h	/^	Window				window;$/;"	m	struct:s_win_list	typeref:typename:Window
wm_delete_window	mlx/mlx_int.h	/^	Atom		wm_delete_window;$/;"	m	struct:s_xvar	typeref:typename:Atom
wm_protocols	mlx/mlx_int.h	/^	Atom		wm_protocols;$/;"	m	struct:s_xvar	typeref:typename:Atom
x	includes/cub3d.h	/^	double	x;$/;"	m	struct:s_point	typeref:typename:double
x	includes/cub3d.h	/^	int		x;$/;"	m	struct:s_draw_params	typeref:typename:int
x	includes/cub3d.h	/^	int	x;$/;"	m	struct:s_vector	typeref:typename:int
xpm1_x	mlx/test/main.c	/^int	xpm1_x;$/;"	v	typeref:typename:int
xpm1_y	mlx/test/main.c	/^int	xpm1_y;$/;"	v	typeref:typename:int
y	includes/cub3d.h	/^	double	y;$/;"	m	struct:s_point	typeref:typename:double
y	includes/cub3d.h	/^	int	y;$/;"	m	struct:s_vector	typeref:typename:int
